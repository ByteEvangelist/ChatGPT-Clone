{"code":"!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t){addEventListener(\"fetch\",e=>{e.respondWith(async function(e,t){new URL(e.url);if(\"GET\"===e.method){let e;try{e=await fetch(\"https://api.openai.com/v1/models\",{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+OPENAI_API_KEY}});let t=await e.json();e=t.error?new Response(`<ul><li>server online ✅</li><li>openai not responding ❌ (error: ${t.error.code})</li></ul>`,{headers:{\"Content-Type\":\"text/html;charset=UTF-8\"}}):new Response(\"<ul><li>server online ✅</li><li>openai responding ✅</li></ul>\",{headers:{\"Content-Type\":\"text/html;charset=UTF-8\"}})}catch(t){console.error(\"Fetch error: \",t),e=new Response(`<ul><li>server online ✅</li><li>openai fetch error ❌ (fetch error: ${t})</li></ul>`,{headers:{\"Content-Type\":\"text/html;charset=UTF-8\"}})}return e}if(\"POST\"===e.method){const{readable:t,writable:n}=new TransformStream,o=new Response(t,{headers:{\"Cache-Control\":\"no-cache\",\"Content-Type\":\"text/event-stream\",Connection:\"keep-alive\",\"Access-Control-Allow-Origin\":\"*\"}}),r=new TextEncoder,s=n.getWriter();for(;;)try{const t=await e.json();openaiResponse=await fetch(\"https://api.openai.com/v1/chat/completions\",{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+OPENAI_API_KEY},method:\"POST\",body:JSON.stringify({model:\"gpt-3.5-turbo\",messages:[...t],stream:!0}),timeout:6e4}),s.write(r.encode(JSON.stringify({data:\"yeye \\n\"})+\"\\n\\n\"));break}catch(e){console.log(\"Error name:\",e.name),console.log(\"Error message:\",e.message),console.log(\"Error stack:\",e.stack),await new Promise(e=>setTimeout(e,1e3))}const a=await openaiResponse.body.getReader(),i=new TextDecoder;return a.read().then((function e({done:t,value:n}){if(t)return void a.cancel();const o=i.decode(n).split(\"\\n\");for(let e in o){if(o[e].startsWith(\"data:\")&&0===o[e].length)continue;const t=o[e].substring(5).trim();if(\"data: [DONE]\"===t)return s.write(r.encode(\"data: [DONE]\\n\\n\")),s.close(),void a.cancel();try{console.log(JSON.parse(n).choices[0].delta.content),s.write(r.encode(JSON.stringify({data:JSON.parse(t).choices[0].delta?JSON.parse(t).choices[0].delta.content:\"\"})+\"\\n\\n\"))}catch(e){console.log(o),console.error(e.message)}}return a.read().then(e)})),o}if(\"OPTIONS\"===e.method){let t={\"Access-Control-Allow-Origin\":\"*\",\"Access-Control-Allow-Methods\":\"GET,HEAD,POST,OPTIONS\",\"Access-Control-Allow-Headers\":e.headers.get(\"Access-Control-Request-Headers\"),\"Access-Control-Max-Age\":\"86400\"};return new Response(null,{headers:t})}}(e.request))})}]);","extractedComments":[]}